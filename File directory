Command : defination or meaning
pwd : print working directory 
cd  : Current Directory 
cd .. :cd space .. is used to exit the current directory 
whoami : command will show you your USERNAME
cd~ :Using the tilde character (”~”) at the start of your path similarly means “starting from my home directory”.
touch will create the files
Ls : shows the list of Items in present directory 
mkdir /tmp/tutorial : This MKDIR created a directory /tmp/tutorial
mkdir -p parentFilename/childfilename/Childfilename : mkdir -p creates nested directory
Example 
mkdir :
mkdir "folder 1"    : create a folder with naame folder 1
mkdir 'folder 2'    : create a folder with naame folder 2
mkdir folder\ 3     : create a folder with naame folder 3
mkdir "folder 4" "folder 5" : create two folders with names "folder 4" "folder 5"
mkdir -p "folder 6"/"folder 7" : create a nested folder of folder 6 and inside that folder 7
ls

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Echo and Cat 

echo writes the sentence and prints it 
cat reads it 
echo just prints its arguments back out again (hence the name). But combine it with a redirect, and you’ve got a way to easily create small test files:

echo "This is a test" > test_1.txt
echo "This is a second test" > test_2.txt
echo "This is a third test" > test_3.txt
ls
You should cat each of these files to check their contents. But cat is more than just a file viewer - its name comes from ‘concatenate’, meaning “to link together”. If you pass more than one filename to cat it will output each of them, one after the other, as a single block of text:

cat test_1.txt test_2.txt test_3.txt

vagrant@vagrant-ubuntu-trusty-64:~/tut/tutorial/D4/D5$ echo "This is some text" > test1.txt   
vagrant@vagrant-ubuntu-trusty-64:~/tut/tutorial/D4/D5$ ls
current  current.txt  D6  folder 3  outlook.txt  output  test1.txt
vagrant@vagrant-ubuntu-trusty-64:~/tut/tutorial/D4/D5$ cat test1.txt
This is some text

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

Cat stands for concatenation too

vagrant@vagrant-ubuntu-trusty-64:~/tut/tutorial/D4/D5$ echo "This is some text" > test1.txt
vagrant@vagrant-ubuntu-trusty-64:~/tut/tutorial/D4/D5$ ls
current  current.txt  D6  folder 3  outlook.txt  output  test1.txt
vagrant@vagrant-ubuntu-trusty-64:~/tut/tutorial/D4/D5$ cat test1.txxt
cat: test1.txxt: No such file or directory
vagrant@vagrant-ubuntu-trusty-64:~/tut/tutorial/D4/D5$ cat test1.txt
This is some text
vagrant@vagrant-ubuntu-trusty-64:~/tut/tutorial/D4/D5$ echo "for testing purposes" > test2.txt
vagrant@vagrant-ubuntu-trusty-64:~/tut/tutorial/D4/D5$ ls
current  current.txt  D6  folder 3  outlook.txt  output  test1.txt  test2.txt
vagrant@vagrant-ubuntu-trusty-64:~/tut/tutorial/D4/D5$ cat t* > combined.txt
vagrant@vagrant-ubuntu-trusty-64:~/tut/tutorial/D4/D5$ cat combined.txt
This is some text
for testing purposes

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
 less  : is used to see the whole page for the text file 
 exaample:
 
 less combined.txt
 
 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
 
 move command -
 
 mv firstto second
 
 vagrant@vagrant-ubuntu-trusty-64:~/tut/tutorial/D4/D5$ mv combined.txt D6     {combined.txt is moved to folder D6}
vagrant@vagrant-ubuntu-trusty-64:~/tut/tutorial/D4/D5$ ls
current  current.txt  D6  folder 3  outlook.txt  output  test1.txt  test2.txt
vagrant@vagrant-ubuntu-trusty-64:~/tut/tutorial/D4/D5$ cd D6
vagrant@vagrant-ubuntu-trusty-64:~/tut/tutorial/D4/D5/D6$ ls

2) mv command can also move multiple documents to the last folder 
mv combined.txt test_* dir3 dir2                                      **dir2 is the folder to which the combined.txt test_* dir3 is moved**
ls
ls dir2

3)mv command caan move from dir2 to dir4
mv dir2/combined.txt dir4/dir5/dir6
ls dir2
ls dir4/dir5/dir6

4)cp command copied the files 

cp dir4/dir5/dir6/combined.txt .
ls dir4/dir5/dir6
ls

5) rm and rmdir 

rm filename
rmdir :to remove directory 
rmdir -p 
rm -r 

vagrant@vagrant-ubuntu-trusty-64:~/tut/tutorial/D4/D5/D6/File$ cd
vagrant@vagrant-ubuntu-trusty-64:~$ rm tut
rm: cannot remove ‘tut’: Is a directory
vagrant@vagrant-ubuntu-trusty-64:~$ rmdir tut
rmdir: failed to remove ‘tut’: Directory not empty
vagrant@vagrant-ubuntu-trusty-64:~$ rmdir -p
rmdir: missing operand
Try 'rmdir --help' for more information.
vagrant@vagrant-ubuntu-trusty-64:~$ rmdir -p tut
rmdir: failed to remove ‘tut’: Directory not empty
vagrant@vagrant-ubuntu-trusty-64:~$ rm -r tut                                                    **rm -r dir name will delete everything -r staands for recursive remove**
vagrant@vagrant-ubuntu-trusty-64:~$ ls tut
ls: cannot access tut: No such file or directory
vagrant@vagrant-ubuntu-trusty-64:~$ ls
File  FILE  file1
vagrant@vagrant-ubuntu-trusty-64:~$ pwd
/home/vagrant
vagrant@vagrant-ubuntu-trusty-64:~$ ls
File  FILE  file1
vagrant@vagrant-ubuntu-trusty-64:~$ cd tut
-bash: cd: tut: No such file or directory
vagrant@vagrant-ubuntu-trusty-64:~$




**A bit of Plumbing**

ls shows the list of files in current directory 
wc shows the word count
wc -l shows the number of lines in the text
wc  can also be used to count the files and folders in a dir by using the ls ~ | wc -l   ** here we are using "|" to store the values to Pipe | in the memory and then pass it wc -l

vagrant@vagrant-ubuntu-trusty-64:~$ clear
vagrant@vagrant-ubuntu-trusty-64:~$ ls
File  FILE  file1
vagrant@vagrant-ubuntu-trusty-64:~$ echo "this text has three words" >File.txt
vagrant@vagrant-ubuntu-trusty-64:~$ pwd
/home/vagrant
vagrant@vagrant-ubuntu-trusty-64:~$ ls
File  FILE  file1  File.txt
vagrant@vagrant-ubuntu-trusty-64:~$ wc File.txt
 1  5 26 File.txt
vagrant@vagrant-ubuntu-trusty-64:~$ wc -l File.txt
1 File.txt
vagrant@vagrant-ubuntu-trusty-64:~$ less File.txt
vagrant@vagrant-ubuntu-trusty-64:~$ pwd
/home/vagrant
vagrant@vagrant-ubuntu-trusty-64:~$ ls ~ > file_list.txt
vagrant@vagrant-ubuntu-trusty-64:~$ wc -l file_list.txt
5 file_list.txt
vagrant@vagrant-ubuntu-trusty-64:~$ ls ~ | wc -l
5

and wc -w for counting words 

vagrant@vagrant-ubuntu-trusty-64:~$ clear
vagrant@vagrant-ubuntu-trusty-64:~$ ls
File  FILE  file1  file_list.txt  File.txt
vagrant@vagrant-ubuntu-trusty-64:~$ cat File.txt
this text has three words
vagrant@vagrant-ubuntu-trusty-64:~$ wc -w File.txt
5 File.txt

# this time for telling us how many items are in the /etc directory:

ls /etc|wc -l

vagrant@vagrant-ubuntu-trusty-64:~$ ls /etc|wc -l
189


## Unix has a command, uniq, that will only output unique lines in the file. So we need to cat the file out and pipe it through uniq

cat combined.txt | uniq | wc -l


vagrant@vagrant-ubuntu-trusty-64:~/combined.txt$ man uniq
vagrant@vagrant-ubuntu-trusty-64:~/combined.txt$ clear
vagrant@vagrant-ubuntu-trusty-64:~/combined.txt$ cat combined1.txt | uniq
two girls have two cars in three cities
two girls have two cars in two cities
two girls have two cars in four cities
vagrant@vagrant-ubuntu-trusty-64:~/combined.txt$ cat combined1.txt | uniq | wc -l
3
vagrant@vagrant-ubuntu-trusty-64:~/combined.txt$ cat combined1.txt
two girls have two cars in three cities
two girls have two cars in three cities
two girls have two cars in two cities
two girls have two cars in two cities
two girls have two cars in four cities
vagrant@vagrant-ubuntu-trusty-64:~/combined.txt$


## sort command arraanges alphabetically 

sort combined.txt | uniq | wc -l











